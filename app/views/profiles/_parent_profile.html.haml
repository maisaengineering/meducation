.formBox
  .formSection Parents

  %table{ :class => 'atable'}
    -@profile.parent_profiles.each_with_index do |parent,index|
      = f.fields_for "parent_attributes[]", parent do |parent_fields|
        
        %tr
          %td{:class => 'table_hr'}

            = parent_fields.hidden_field :parent_id, :value => generate_id(Profile.generate_activation_code)

            - parent.profiles_manageds.each_with_index do |profiles_managed, index|
              = parent_fields.fields_for "profiles_manageds[]", profiles_managed do | profiles_managed_fields|
                %label
                  Parent relationship
                  .formErrorText#relation_error{:style => "display: none"} ERROR: Parent relationship is required          

                - if !@parents_details.nil?                  
                  =profiles_managed_fields.select :child_relationship, options_for_select([[''],['Father','Father'],['Mother','Mother'],['Step-father','Step-father'],['Step-mother','Step-mother'],['Grandmother','Grandmother'],['Grandfather','Grandfather'],['Other','Other']], :selected =>"#{@parents_details.split(',')[0] unless @parents_details.nil?}")
                -else  
                  = profiles_managed_fields.select(:child_relationship, ['','Father','Mother','Step-father','Step-mother','Grandmother','Grandfather','Gaurdian','Other'], {}, { :class => 'required', :include_blank => true, :title => "ERROR: Parent relationship is required"})
                
            %label
              First name
              .formErrorText#parent_fname_error{:style => "display: none"} ERROR: First name is required          

            = parent_fields.text_field :fname, :value => "#{@parents_details.split(',')[3] unless @parents_details.nil?}", :class => "required", :title => "ERROR: First name is required"

            %label
              Last name
              .formErrorText#parent_lname_error{:style => "display: none"} ERROR: Last name is required          
            = parent_fields.text_field :lname, :value => "#{@parents_details.split(',')[2] unless @parents_details.nil?}", :class => "required", :title => "ERROR: Last name is required"

            %label
              E-mail address
              .formErrorText#parent_email_error{:style => "display: none"} ERROR: E-mail address is required                      
            = parent_fields.email_field :email, :value => "#{@parents_details.split(',')[4] unless @parents_details.nil?}", :class => "required", :title => "ERROR: Email is required", :onblur => "this.value=this.value.toLowerCase()"
            
            - parent.phone_numbers.each_with_index do |phone_number, index|
              = parent_fields.fields_for "phone_numbers[]", phone_number do | phone_number_fields| 
                     
                %label
                  Phone number #1
                  .formErrorText#phone_error{:style => "display: none"} ERROR: Phone number #1 is required                      

                =phone_number_fields.text_field :contact, :value => "#{@parents_details.split(',')[8] unless @parents_details.nil?}", :class => "required", :title => "ERROR: Phone number #1 is required"                
                =phone_number_fields.select :type, options_for_select([['Mobile','Mobile'],['Home','Home'],['Work','Work']], :selected =>"#{@parents_details.split(',')[9] unless @parents_details.nil?}")
                %label.error{:for => "profile_parent_attributes___phone_numbers__contact", :generated => "true", :style => "display:none"} ERROR: Phone number #1 is required


                =phone_number_fields.label :contact, "Phone number #2"
                =phone_number_fields.text_field :contact, :value => "#{@parents_details.split(',')[10] unless @parents_details.nil?}", :class => "required"                                      
                =phone_number_fields.select :type, options_for_select([['Home','Home'],['Mobile','Mobile'],['Work','Work']], :selected =>"#{@parents_details.split(',')[11] unless @parents_details.nil?}")                 

                =phone_number_fields.label :contact, "Phone number #3"
                =phone_number_fields.text_field :contact, :value => "#{@parents_details.split(',')[12] unless @parents_details.nil?}", :class => "required"                                          
                =phone_number_fields.select :type, options_for_select([['Work','Work'],['Mobile','Mobile'],['Home','Home']], :selected =>"#{@parents_details.split(',')[13] unless @parents_details.nil?}")                 
                
                %span.pointer.delRow

        %tr
          %td{:class => 'table_hr'}

            = parent_fields.hidden_field :parent_id, :value => generate_id(Profile.generate_activation_code)

            - parent.profiles_manageds.each_with_index do |profiles_managed, index|
              = parent_fields.fields_for "profiles_manageds[]", profiles_managed do | profiles_managed_fields|
                =profiles_managed_fields.label :child_relationship, "Parent relationship"
                =profiles_managed_fields.select :child_relationship, options_for_select([[''],['Father','Father'],['Mother','Mother'],['Step-father','Step-father'],['Step-mother','Step-mother'],['Grandmother','Grandmother'],['Grandfather','Grandfather'],['Gaurdian','Gaurdian'],['Other','Other']], :selected =>"#{@parents_details.split(',')[1] unless @parents_details.nil?}")

            = parent_fields.label :fname, "First name"
            = parent_fields.text_field :fname, :value => "#{@parents_details.split(',')[6] unless @parents_details.nil?}"

            = parent_fields.label :lname, "Last name"
            = parent_fields.text_field :lname, :value => "#{@parents_details.split(',')[5] unless @parents_details.nil?}"

            = parent_fields.label :email, "E-mail address"
            = parent_fields.email_field :email, :value => "#{@parents_details.split(',')[7] unless @parents_details.nil?}", :onblur => "this.value=this.value.toLowerCase()"    

            - parent.phone_numbers.each_with_index do |phone_number, index|
              = parent_fields.fields_for "phone_numbers[]", phone_number do | phone_number_fields|          
            
                =phone_number_fields.label :contact, "Phone number #1"
                =phone_number_fields.text_field :contact, :value => "#{@parents_details.split(',')[14] unless @parents_details.nil?}"                          
                =phone_number_fields.select :type, options_for_select([['Mobile','Mobile'],['Home','Home'],['Work','Work']], :selected =>"#{@parents_details.split(',')[15] unless @parents_details.nil?}")

                =phone_number_fields.label :contact, "Phone number #2"
                =phone_number_fields.text_field :contact, :value => "#{@parents_details.split(',')[16] unless @parents_details.nil?}"                          
                =phone_number_fields.select :type, options_for_select([['Home','Home'],['Mobile','Mobile'],['Work','Work']], :selected =>"#{@parents_details.split(',')[17] unless @parents_details.nil?}")

                =phone_number_fields.label :contact, "Phone number #3"
                =phone_number_fields.text_field :contact, :value => "#{@parents_details.split(',')[18] unless @parents_details.nil?}"                         
                =phone_number_fields.select :type, options_for_select([['Work','Work'],['Mobile','Mobile'],['Home','Home']], :selected =>"#{@parents_details.split(',')[19] unless @parents_details.nil?}")
                
                %span.pointer.delRow
                
        %tr
          %td
            %span.pointer.addRow Add additional parents


:javascript
  $("document").ready(function(){        
    $(".addRow").btnAddRow();
    $(".delRow").btnDelRow();
  });
